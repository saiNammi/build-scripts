---
arch: ppc64le
dist: focal
os: linux
language: shell

git:
  depth: false

services:
    - docker

before_install:
    - docker pull registry.access.redhat.com/ubi9/ubi:9.3


jobs:
  include:
    - stage: pr_builds
      name: "Create Wheel for Python 3.12"
      env: PYTHON_VERSION="3.12"
      before_script:
        - git fetch --all
        - git diff --name-only origin/validate_wheel_on_pr...HEAD -- '*.sh'
      script:
        - |
          # Fetch modified build scripts
          MODIFIED_SCRIPTS=$(git diff --name-only origin/main...HEAD -- '*.sh')
          # Fetch modified build_info.json files
          MODIFIED_JSONS=$(git diff --name-only origin/main...HEAD -- '*/build_info.json')

          if [[ -z "$MODIFIED_SCRIPTS" ]]; then
            echo "No build script modifications detected."
            exit 0
          fi

          for script in $MODIFIED_SCRIPTS; do
            PACKAGE_DIR=$(dirname "$script")
            BUILD_SCRIPT_PATH=$(pwd)/"$script"
            BUILD_INFO_FILE="$PACKAGE_DIR/build_info.json"

            echo "----------------------------------"
            echo "Build Script: $BUILD_SCRIPT_PATH"
            echo "Package Directory: $PACKAGE_DIR"

            # Check if build_info.json is modified
            if echo "$MODIFIED_JSONS" | grep -q "$BUILD_INFO_FILE"; then
              echo "Using modified build_info.json"
              VERSION=$(git show HEAD:"$BUILD_INFO_FILE" | jq -r '.version')
              WHEEL_BUILD=$(git show HEAD:"$BUILD_INFO_FILE" | jq -r '.wheel_build')
            elif [[ -f "$BUILD_INFO_FILE" ]]; then
              echo "Using existing build_info.json"
              VERSION=$(jq -r '.version' "$BUILD_INFO_FILE")
              WHEEL_BUILD=$(jq -r '.wheel_build' "$BUILD_INFO_FILE")
            else
              echo "No build_info.json found in $PACKAGE_DIR"
              continue
            fi

            echo "Version: $VERSION"
            echo "Wheel Build: $WHEEL_BUILD"

            if [[ "$WHEEL_BUILD" == "false" ]]; then
              echo "Skipping $PACKAGE_DIR as wheel_build is set to false."
              continue
            fi

            # Proceed with further steps
            echo "Processing $PACKAGE_DIR..."
          done
